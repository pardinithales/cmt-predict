# -*- coding: utf-8 -*-
"""cmt_predict.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12jwzxoMDIHqiu58ftBpgOcQyDfpwJnHA
"""

import streamlit as st
import pandas as pd
from sklearn.ensemble import RandomForestClassifier, AdaBoostClassifier
from xgboost import XGBClassifier

# Função para fazer a previsão usando o modelo selecionado
def predict_cmt(model, features):
    prediction = model.predict(features)
    return prediction[0]

# Configuração da página do Streamlit
st.set_page_config(page_title='Calculadora de Classificação de CMT', page_icon=':hospital:', layout='centered')

# Título e descrição da aplicação
st.title('Calculadora de Classificação de CMT')
st.write('Esta é uma calculadora interativa para classificar o subtipo de CMT com base em dados neurofisiológicos.')

# Carregando os modelos treinados
rf_model = RandomForestClassifier()
xgb_model = XGBClassifier()
ada_model = AdaBoostClassifier()

# Carregando os dados de treinamento e ajustando os modelos
train_data = pd.read_csv('train_data.csv')
X_train = train_data.drop(['diagnosis_class'], axis=1)
y_train = train_data['diagnosis_class']
rf_model.fit(X_train, y_train)
xgb_model.fit(X_train, y_train)
ada_model.fit(X_train, y_train)

# Criando o formulário para entrada de dados
with st.form("cmt_form"):
    st.header('Dados Neurofisiológicos')
    sex = st.selectbox('Sexo', ('Feminino', 'Masculino'))
    age_onset = st.number_input('Idade de Início', min_value=0, max_value=100, value=30)
    med_latency = st.number_input('med.latency', min_value=0.0, max_value=100.0, value=5.0)
    med_amp = st.number_input('med.amp', min_value=0.0, max_value=100.0, value=5.0)
    med_cv = st.number_input('med.cv', min_value=0.0, max_value=100.0, value=50.0)
    med_fwave = st.number_input('med.fwave', min_value=0.0, max_value=100.0, value=50.0)
    uln_latency = st.number_input('uln.latency', min_value=0.0, max_value=100.0, value=5.0)
    uln_amp = st.number_input('uln.amp', min_value=0.0, max_value=100.0, value=5.0)
    uln_cv = st.number_input('uln.cv', min_value=0.0, max_value=100.0, value=50.0)
    uln_fwave = st.number_input('uln.fwave', min_value=0.0, max_value=100.0, value=50.0)
    rad_amp = st.number_input('rad.amp', min_value=0.0, max_value=100.0, value=5.0)
    rad_cv = st.number_input('rad.cv', min_value=0.0, max_value=100.0, value=50.0)
    cmtes = st.number_input('CMTES', min_value=0, max_value=50, value=10)
    cmtns = st.number_input('CMTNS', min_value=0, max_value=50, value=10)

    # Seleção do modelo
    st.header('Seleção do Modelo')
    model_choice = st.selectbox('Escolha o modelo de classificação', ('Random Forest', 'XGBoost', 'AdaBoost'))

    # Botão de submissão do formulário
    submit_button = st.form_submit_button("Classificar")

# Processamento dos dados após submissão do formulário
if submit_button:
    # Preparando os dados de entrada na ordem correta
    input_data = pd.DataFrame({
        'sex_F': [1 if sex == 'Feminino' else 0],
        'sex_M': [1 if sex == 'Masculino' else 0],
        'med.ampl': [med_amp],
        'CMTES': [cmtes],
        'age_onset': [age_onset],
        'rad.ampl': [rad_amp],
        'med.latency': [med_latency],
        'uln.fwave': [uln_fwave],
        'CMTNS': [cmtns],
        'uln.ampl': [uln_amp],
        'med.fwave': [med_fwave],
        'uln.latency': [uln_latency],
        'uln.cv': [uln_cv],
        'med.cv': [med_cv],
        'rad.cv': [rad_cv]
    }, columns=rf_model.feature_names_in_)

    # Selecionando o modelo com base na escolha do usuário
    if model_choice == 'Random Forest':
        model = rf_model
    elif model_choice == 'XGBoost':
        model = xgb_model
    else:
        model = ada_model

    # Fazendo a previsão
    prediction = predict_cmt(model, input_data)

    # Exibindo o resultado da classificação
    st.header('Resultado da Classificação')
    if prediction == 0:
        st.write('O subtipo de CMT previsto é: CMT1A')
    elif prediction == 1:
        st.write('O subtipo de CMT previsto é: MPZ')
    else:
        st.write('O subtipo de CMT previsto é: GJB1')
